import { BigNumber } from "@ethersproject/bignumber";
import { arbitrum } from "viem/chains";
import { TokenDetails } from "~~/types/types";

export const CHAIN_ID_ARBITRUM = 42161;

export const STRART_BLOCK_NUMBER = 267523713; // Oct-25-2024 01:43:24 PM +UTC, when the intent was created
export const STRART_BLOCK_TIMESTAMP = 1729863804; // Oct-25-2024 01:43:24 PM +UTC, when the intent was created
export const FIRST_FILL_BLOCK_TIMESTAMP = 1729863806; // Oct-25-2024 01:43:26 PM +UTC, first timestamp when the intent can be filled with V3 pool

export const PERMIT2_ADDRESS = "0x000000000022D473030F116dDEE9F6B43aC78BA3";

export const UNISWAP_V3_USDC_USDT_POOL_ADDRESS = "0xbE3aD6a5669Dc0B8b12FeBC03608860C31E2eef6";
export const UNISWAP_V3_USDC_INPUT_AMOUNT = BigNumber.from("1001376542");
export const UNISWAP_V3_USDT_OUTPUT_AMOUNT = BigNumber.from("1001801993");

export const USDC_ADDRESS = "0xaf88d065e77c8cC2239327C5EDb3A432268e5831";
export const USDT_ADDRESS = "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9";

export const TOKENS: Record<string, TokenDetails> = {
  [USDC_ADDRESS]: {
    name: "USDC",
    imgSrc: "/tokens/USDC.png",
  },
  [USDT_ADDRESS]: {
    name: "USDT",
    imgSrc: "/tokens/USDT.png",
  },
};

// This has to be hardcoded, because swap calldata uses this address
export const SWAP_ROUTER_02_EXECUTOR_ADDRESS_HARDHAT = "0xCf027C4b03DC18A60422AB981b1Ea1A27EC2E06F";

export const signedIntent = {
  order:
    "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001000000000000000000000000004449cd34d1eb1fedcf02a1be3834ffde8e6a6180000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e5831000000000000000000000000000000000000000000000000000000003bafcb1e000000000000000000000000000000000000000000000000000000003bafcb1e00000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000028000000000000000000000000000000000000000000000000000000000000003800000000000000000000000001bd1aadc9e230626c44a139d7e70d842749351eb00000000000000000000000001f1642ccd7d9b6d350a40e58eb20efa8f536269c6b0afe0a0b23a7fa24b72c69f8c0fe697f4e19c597e52af58c53215ad70fe0000000000000000000000000000000000000000000000000000000000671ba0bf000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9000000000000000000000000000000000000000000000000000000003bbc44eb000000000000000000000000000000000000000000000000000000003b6fb3cb00000000000000000000000001f1642ccd7d9b6d350a40e58eb20efa8f53626900000000000000000000000000000000000000000000000000000000671ba07c00000000000000000000000000000000000000000000000000000000671ba08c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000003bbc44eb0000000000000000000000000000000000000000000000000000000000000041586b516924b46b7322e2ea74ccfa6c685a0fdc4bacc04081aec6fc4701445662281df99f65e0691533caf7226f33503ae1d1ed34532265256427a66a6202d3fa1c00000000000000000000000000000000000000000000000000000000000000" as `0x${string}`,
  sig: "0xea40b047ca77fb2660efaf66c7907e1d6963c4bc052661f0a16b413c730c7d7573549fb5a7e6e094f97c66a47f1273be4e9b2121a20fc8d6460a9d672304583b1c" as `0x${string}`,
};
export const callbackData =
  "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e58310000000000000000000000000000000000000000000000000000000000000002000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e58310000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001a45ae401dc00000000000000000000000000000000000000000000000000000000672a815d00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e404e45aaf000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e5831000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb90000000000000000000000000000000000000000000000000000000000000064000000000000000000000000cf027c4b03dc18a60422ab981b1ea1a27ec2e06f000000000000000000000000000000000000000000000000000000003bafcb1e000000000000000000000000000000000000000000000000000000003b6a3bef00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" as `0x${string}`;

export const localForkArbitrum = {
  ...arbitrum,
  rpcUrls: { default: { http: ["http://127.0.0.1:8545"] } },
};
